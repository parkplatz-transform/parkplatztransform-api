"""

Revision ID: 5acdb8935d1a
Revises: 2da07dd7d67b
Create Date: 2020-12-12 12:47:09.997047

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5acdb8935d1a'
down_revision = '2da07dd7d67b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    usage_restriction = postgresql.ENUM('handicap', 'residents', 'car_sharing', 'gender', 'electric_cars', 'other', name='usagerestriction')
    usage_restriction.create(op.get_bind())

    no_parking_reason = postgresql.ENUM('private_parking', 'bus_stop', 'bus_lane', 'taxi', 'tree', 'bike_racks', 'pedestrian_crossing', 'driveway', 'loading_zone', 'standing_zone', 'emergency_exit', 'lowered_curb_side', 'lane', name='noparkingreason')
    no_parking_reason.create(op.get_bind())

    op.alter_column('segments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('segments', 'geometry',
               existing_type=geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'),
               nullable=False)
    op.alter_column('segments', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('segments', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('subsegments', sa.Column('duration_constraint', sa.Boolean(), nullable=False))
    op.add_column('subsegments', sa.Column('fee', sa.Boolean(), nullable=True))
    op.add_column('subsegments', sa.Column('no_parking_reason', sa.Enum('private_parking', 'bus_stop', 'bus_lane', 'taxi', 'tree', 'bike_racks', 'pedestrian_crossing', 'driveway', 'loading_zone', 'standing_zone', 'emergency_exit', 'lowered_curb_side', 'lane', name='noparkingreason'), nullable=True))
    op.add_column('subsegments', sa.Column('time_constraint', sa.Boolean(), nullable=False))
    op.add_column('subsegments', sa.Column('time_constraint_reason', sa.Text(), nullable=True))
    op.add_column('subsegments', sa.Column('usage_restrictions', sa.Enum('handicap', 'residents', 'car_sharing', 'gender', 'electric_cars', 'other', name='usagerestriction'), nullable=True))
    op.alter_column('subsegments', 'car_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('subsegments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('subsegments', 'length_in_meters',
               existing_type=sa.NUMERIC(),
               nullable=False)
    op.alter_column('subsegments', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('subsegments', 'order_number',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('subsegments', 'parking_allowed',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('subsegments', 'quality',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('subsegments', 'segment_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('subsegments_segment_id_fkey', 'subsegments', type_='foreignkey')
    op.create_foreign_key(None, 'subsegments', 'segments', ['segment_id'], ['id'], ondelete='CASCADE')
    op.drop_column('subsegments', 'count')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('subsegments', sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'subsegments', type_='foreignkey')
    op.create_foreign_key('subsegments_segment_id_fkey', 'subsegments', 'segments', ['segment_id'], ['id'])
    op.alter_column('subsegments', 'segment_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('subsegments', 'quality',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('subsegments', 'parking_allowed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('subsegments', 'order_number',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('subsegments', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('subsegments', 'length_in_meters',
               existing_type=sa.NUMERIC(),
               nullable=True)
    op.alter_column('subsegments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('subsegments', 'car_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('subsegments', 'usage_restrictions')
    op.drop_column('subsegments', 'time_constraint_reason')
    op.drop_column('subsegments', 'time_constraint')
    op.drop_column('subsegments', 'no_parking_reason')
    op.drop_column('subsegments', 'fee')
    op.drop_column('subsegments', 'duration_constraint')
    op.alter_column('segments', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('segments', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('segments', 'geometry',
               existing_type=geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'),
               nullable=True)
    op.alter_column('segments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###
